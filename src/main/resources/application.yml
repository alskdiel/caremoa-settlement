#database: h2 
#database: mysql

springdoc:
  api-docs:
    path: /api-docs # spring boot 웹 애플리케이션의 api를 OpenAPI 3을 이용하여 json 형식화 한것의 경로
  default-consumes-media-type: application/json # request media type 의 기본 값
  default-produces-media-type: application/json # response media type 의 기본 값
  swagger-ui: # 기본값 : 컨트롤러 내에서 정의한 api 메서드 순
    enabled: true
    operations-sorter: method # 태그 내 각 api의 정렬 기준
                              # alpha(알파벳 오름차순), method(http method 순) 
    tags-sorter: alpha 
    path: swagger-ui.html
    disable-swagger-default-url: true
      # json화 된 config파일 대신 파라미터를 이용하여 swagger-ui에 접근하도록 합니다.
      # api-docs(/api-docs) 및 swagger-ui.configUrl(/api-docs/swagger-config)를 두번씩 호출하는 것을 방지합니다.
    doc-expansion: none # 기본 값: list
      # tag와 operation을 펼치는 방식에 대한 설정
      # String=["list", "full", "none"]
      # none으로 설정할 경우, tag 및 operation이 모두 닫힌채로 문서가 열립니다.
  #paths-to-match: # OpenAPI 3 로 문서화할 api path 리스트
  #  - /**
  
api:  # Swagger UI Information
  info:
    title: CareMoa Helper Service API
    description: API to fetch CareMoa Helper
    version: 1.0.0
    terms-of-service: http://caremoa.com/terms/
    contact:
      name: CareMoa Service API Team
      email: lbg@sk.com
      url: http://sk.com/caremoateam
    license:
      name: Apache 2.0
      url: http://www.apache.org/licenses/LICENSE-2.0.html


spring:
  application:
    name: settlement
  config:
    activate:
      on-profile: default    
  sql:
    init:
      mode: embedded # ALWAYS: 모든 데이터베이스에 sql 스크립트를 동작시킨다. / EMBDEDED: embedded 데이터베이스만 sql 스크립트를 동작시킨다. / NEVER: 모든 데이터베이스에 sql 스크립트를 동작시키지 않는다.
      #schema-locations: classpath*:db/${database}/schema.sql
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://ec2-3-39-223-154.ap-northeast-2.compute.amazonaws.com:3306/user4?serverTimezone=Asia/Seoul
    #url: jdbc:mysql://13.125.214.14:3306/user4?serverTimezone=Asia/Seoul
    username: ENC(eRkjbBUClEuxSMQumlK4KA==)
    password: ENC(ezUNj3HiHzPghwZjRM9Fzg==)
    #url: jdbc:h2:mem:testdb
    #username: sa
    #password:
    #driver-class-name: org.h2.Driver
  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
  #h2:
  #  console:
  #    enabled: true
  #    path: /h2-console
  mvc:
    pathmatch:
      matching-strategy: ant-path-matcher
#-------------------------------------------------------------
# Kafka 설정
#-------------------------------------------------------------
  cloud:
    function:
      #definition: wheneverContractCompletedThenCreateSettlement;wheneverContractAcceptedThenCreateContract;wheneverPaymentCompletedThenCreatePayment;
      definition: basicConsumer
      
    stream:
      kafka:
        #binder:
        #  brokers: localhost:9091,localhost:9092,localhost:9093
        #  zkNodes: localhost:2181,localhost:2182,localhost:2183
        binder:
          brokers: ec2-3-39-223-154.ap-northeast-2.compute.amazonaws.com:9092
          #brokers: 13.125.214.14:9092
        
      bindings:
        basicConsumer-in-0:
          group: settlement
          destination: caremoa-topic
          content-type: application/json
        #basicProducer-out-0:
        #  destination: caremoa-topic
        #  content-type: application/json

server:
  port: 8080
  servlet:
    contextPath: /settlement

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic
jasypt:
  encryptor:
    bean: jasyptStringEncryptor        
  
logging:
  level:
    root: info
    org.hibernate.SQL: debug

